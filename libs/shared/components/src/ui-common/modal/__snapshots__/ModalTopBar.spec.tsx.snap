// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ModalTopBar should render trailing icon when provided 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="container"
      >
        <button
          class="lmnt lmnt-icon-button mdc-icon-button lmnt-icon-button--medium modal_back_button mdc-ripple-upgraded--unbounded"
          tabindex="0"
        >
          <i
            aria-hidden="false"
            class="lmnt lmnt-icon material-icons lmnt-icon--medium"
          >
            close
          </i>
        </button>
        <span
          class="mdc-typography lmnt mdc-typography--headline6"
        >
          Modal Title
        </span>
        <div
          class="trailing_content"
        >
          <button
            class="lmnt lmnt-icon-button mdc-icon-button lmnt-icon-button--medium mdc-ripple-upgraded--unbounded"
            tabindex="0"
          >
            <i
              aria-hidden="false"
              class="lmnt lmnt-icon material-icons lmnt-icon--medium"
            >
              search
            </i>
          </button>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="container"
    >
      <button
        class="lmnt lmnt-icon-button mdc-icon-button lmnt-icon-button--medium modal_back_button mdc-ripple-upgraded--unbounded"
        tabindex="0"
      >
        <i
          aria-hidden="false"
          class="lmnt lmnt-icon material-icons lmnt-icon--medium"
        >
          close
        </i>
      </button>
      <span
        class="mdc-typography lmnt mdc-typography--headline6"
      >
        Modal Title
      </span>
      <div
        class="trailing_content"
      >
        <button
          class="lmnt lmnt-icon-button mdc-icon-button lmnt-icon-button--medium mdc-ripple-upgraded--unbounded"
          tabindex="0"
        >
          <i
            aria-hidden="false"
            class="lmnt lmnt-icon material-icons lmnt-icon--medium"
          >
            search
          </i>
        </button>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
